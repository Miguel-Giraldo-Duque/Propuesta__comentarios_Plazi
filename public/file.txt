

## Texto de ejemplo !




Bueno por alg칰n motivo no me dejo responder la pregunta de Luis la cual es:


*Se me ocurri칩 en que se podr칤a hacer un hash de los tokens para as칤 darle una capa de seguridad al token, pero... esto realmente es posible? como por ejemplo con bcrypt? seguiria funcionando?*

Esta es mi respuesta: 

**Hola Luis游녦**

Me dejaste pensando y busque poco .
Sabemos que JWT firma el token no lo encripta , cual es la diferencia? , que cuando firmas el token el payload es accesible y cuando lo encriptas ya no lo es , entiendo la intenci칩n de usar bycript pero ten en cuenta que bycript no encripta como tal hace un proceso de hash  unidireccional que impedir칤a revertir el estado original del token, un m칠todo para lograr la encriptaci칩n es de la propia librer칤a jose aqu칤 te dejo un c칩digo de ejemplo   


````
npm install jose
const jwt = require('jsonwebtoken');
const { JWE, JWK } = require('jose');

// Clave secreta para firmar el JWT
const secret = "ultraSecreto";

// Configuraci칩n del JWT
const jwtConfig = {
  expiresIn: '30s',
};

// Payload del JWT
const payload = {
  sub: 1,
  role: "cliente"
};

// Firma el JWT
const signedToken = jwt.sign(payload, secret, jwtConfig);
console.log("Signed JWT:", signedToken);


// Genera una clave de encriptaci칩n
const key = JWK.asKey("ultraSecretoClaveParaEncriptar", { alg: 'A256GCM', use: 'enc' });

// Encripta el JWT firmado
const encryptedToken = JWE.encrypt(token, key);
console.log("Encrypted JWT:", encryptedToken);

// Para desencriptar el JWT
const decryptedToken = JWE.decrypt(encryptedToken, key);
console.log("Decrypted Token:", decryptedToken);
````

Espero te sirva游눜